<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhanliang Liu on Zhanliang Liu</title>
    <link>/</link>
    <description>Recent content in Zhanliang Liu on Zhanliang Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>FMR: functional meaning representation</title>
      <link>/project/fmr/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/fmr/</guid>
      <description>

&lt;h2 id=&#34;element-types-in-fmr&#34;&gt;Element types in FMR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Constants&lt;/strong&gt;: Refer to specific objects in the world. A constant can be a number, a lexical string, or an entity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Classes&lt;/strong&gt;: Semantic category of entities. For example: &lt;code&gt;location.city&lt;/code&gt;, &lt;code&gt;math.number&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Sub-class: &lt;em&gt;math.number ⊆ math.expression&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Template classes: classes with one or more parameters, for example: &lt;code&gt;t.list&amp;lt;c, m, n&amp;gt;&lt;/code&gt;, where &lt;code&gt;c&lt;/code&gt; is a class, &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; are integers.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Functions&lt;/strong&gt;: The major way to form larger language units from smaller ones. A function is comprised of a &lt;em&gt;name&lt;/em&gt;, a list of &lt;em&gt;core arguments&lt;/em&gt;, and a &lt;em&gt;return type&lt;/em&gt;.

&lt;ul&gt;
&lt;li&gt;Noun functions

&lt;ul&gt;
&lt;li&gt;Map entities to their properties or to other entities having specific relations withe the argument(s).&lt;/li&gt;
&lt;li&gt;Are used to represent noun phrases in natural language.&lt;/li&gt;
&lt;li&gt;Pronoun functions are special zero-argument noun functions.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Verb functions

&lt;ul&gt;
&lt;li&gt;Act as sentences or sub-sentences&lt;/li&gt;
&lt;li&gt;The most important function type?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Modifier functions

&lt;ul&gt;
&lt;li&gt;Many functions can take additional &lt;em&gt;extended arguments&lt;/em&gt; as their modifiers.&lt;/li&gt;
&lt;li&gt;Modifier functions often take the role of extended arguments to modify noun function, verb functions or other modifier functions.&lt;/li&gt;
&lt;li&gt;Are used in FMR as the semantic representation of adjectives, adverb phrases (including conjunctive adverb phrases), and prepositional phrases in NL&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entity Variables&lt;/strong&gt;: Variables are assigned to FMR nodes for indicating the co-reference of sub-trees to entities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;features-of-fmr&#34;&gt;Features of FMR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Strongly typed language

&lt;ul&gt;
&lt;li&gt;Type-compatibility: The type of each child of a function node should match the corresponding argument type of the function.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Open-domain type system.

&lt;ul&gt;
&lt;li&gt;Thousands of types&lt;/li&gt;
&lt;li&gt;Other languages: At most 100+ in grammar level&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Built-in data structures

&lt;ul&gt;
&lt;li&gt;like &lt;code&gt;t.list&lt;/code&gt; and &lt;code&gt;nf.list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;semantic-parsing-from-nl-to-fmr&#34;&gt;Semantic parsing from NL to FMR&lt;/h2&gt;

&lt;p&gt;By using CFG rules to map natural language sentences and phrases to FMR&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;quot;The product of 3 consecutive number is 60&amp;quot; =&amp;gt; 
vf.be.equ(nf.math.product(nf.list(math.number, 3, mf.consecutive)), 60);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;缘起&#34;&gt;缘起&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;语义理解平台/语音助手（2013-今，腾讯/搜狗）

&lt;ul&gt;
&lt;li&gt;复合实体识别（CRF识别/规则识别/词表识别）&lt;/li&gt;
&lt;li&gt;基于语言模型的查询意图理解&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于语义模板的查询意图识别和语义信息抽取&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;通用CFG文法解析器：高效Earley算法的实现&lt;/li&gt;
&lt;li&gt;意图识别，槽位填充&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;查询意图排序，基于候选意图结果的终判模块&lt;/li&gt;
&lt;li&gt;下游分类别知识库系统/垂直搜索系统&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>gocc: Golang version OpenCC 繁簡轉換</title>
      <link>/project/gocc/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/gocc/</guid>
      <description>

&lt;h2 id=&#34;introduction-介紹&#34;&gt;Introduction 介紹&lt;/h2&gt;

&lt;p&gt;gocc is a golang port of OpenCC(&lt;a href=&#34;https://github.com/BYVoid/OpenCC/&#34; target=&#34;_blank&#34;&gt;Open Chinese Convert 開放中文轉換&lt;/a&gt;) which is a project for conversion between Traditional and Simplified Chinese developed by &lt;a href=&#34;https://www.byvoid.com/&#34; target=&#34;_blank&#34;&gt;BYVoid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;gocc stands for &amp;ldquo;&lt;strong&gt;Go&lt;/strong&gt;lang version Open&lt;strong&gt;CC&lt;/strong&gt;&amp;rdquo;, it is a total rewrite version of OpenCC by Go. It just borrows the dict files and config files of OpenCC, so it may not produce the same output with the original OpenCC.&lt;/p&gt;

&lt;h2 id=&#34;installation-安裝&#34;&gt;Installation 安裝&lt;/h2&gt;

&lt;h3 id=&#34;1-golang-package&#34;&gt;1, golang package&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get github.com/liuzl/gocc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-command-line&#34;&gt;2, Command Line&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/liuzl/gocc
cd gocc/cmd
make install
gocc --help
echo &amp;quot;我们是工农子弟兵&amp;quot; | gocc
#我們是工農子弟兵
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;usage-使用&#34;&gt;Usage 使用&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;fmt&amp;quot;
    &amp;quot;github.com/liuzl/gocc&amp;quot;
    &amp;quot;log&amp;quot;
)

func main() {
    s2t, err := gocc.New(&amp;quot;s2t&amp;quot;)
    if err != nil {
        log.Fatal(err)
    }
    in := `自然语言处理是人工智能领域中的一个重要方向。`
    out, err := s2t.Convert(in)
    if err != nil {
        log.Fatal(err)
    }
    fmt.Printf(&amp;quot;%s\n%s\n&amp;quot;, in, out)
    //自然语言处理是人工智能领域中的一个重要方向。
    //自然語言處理是人工智能領域中的一個重要方向。
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conversions&#34;&gt;Conversions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s2t&lt;/code&gt; Simplified Chinese to Traditional Chinese&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2s&lt;/code&gt; Traditional Chinese to Simplified Chinese&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s2tw&lt;/code&gt; Simplified Chinese to Traditional Chinese (Taiwan Standard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tw2s&lt;/code&gt; Traditional Chinese (Taiwan Standard) to Simplified Chinese&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s2hk&lt;/code&gt; Simplified Chinese to Traditional Chinese (Hong Kong Standard)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hk2s&lt;/code&gt; Traditional Chinese (Hong Kong Standard) to Simplified Chinese&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s2twp&lt;/code&gt; Simplified Chinese to Traditional Chinese (Taiwan Standard) with Taiwanese idiom&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tw2sp&lt;/code&gt; Traditional Chinese (Taiwan Standard) to Simplified Chinese with Mainland Chinese idiom&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2tw&lt;/code&gt; Traditional Chinese (OpenCC Standard) to Taiwan Standard&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t2hk&lt;/code&gt; Traditional Chinese (OpenCC Standard) to Hong Kong Standard&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Illustration of the logistic map</title>
      <link>/post/logistic-map/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>/post/logistic-map/</guid>
      <description>&lt;p&gt;Illustration of the logistic map, $x_{n+1} = f(x_n) = r \cdot x_n \cdot (1 - x_n)$&lt;/p&gt;

&lt;p&gt;At $r_1=3$, a stable period $2^1=2$ orbit is born. At $r_2=3.449$ a stable period $2^2=4$ orbit is born. As $r$ continues to increase, the period doublings continue until $r_{\infty} \approx 3.56995$ after which chaotic dynamics begin to occur, interspersed with periodic windows.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://en.wikipedia.org/wiki/Feigenbaum_constants&#34; target=&#34;_blank&#34;&gt;Feigeinbaum constant&lt;/a&gt; $\delta=4.6692\dots$ is the ratio of subsequent differences between the values of $r_n$ at which the period doubles, as $n$ approaches infinity.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import matplotlib.pyplot as plt
import pylab

def f(x, R):
    return R * x * (1 - x)

def run_simulation(R, x_0, num_steps):
    x_list = np.zeros(num_steps)
    x_list[0] = x_0   
    for t in range(num_steps-1):
        x_list[t+1] = f(x_list[t], R)       
    return x_list

def plot_two(x_list, y_list):
    plt.plot(x_list)
    plt.plot(y_list)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;x_list = run_simulation(R=4, x_0=0.7, num_steps=50)
y_list = run_simulation(R=4, x_0=0.70001, num_steps=50)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plot_two(x_list, y_list)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/logistic_map_3_0.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ling: A Natural Language Processing toolkit in Golang</title>
      <link>/project/ling/</link>
      <pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/ling/</guid>
      <description>

&lt;h2 id=&#34;other-nlp-tools&#34;&gt;other NLP tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stanfordnlp.github.io/CoreNLP/index.html&#34; target=&#34;_blank&#34;&gt;Stanford CoreNLP&lt;/a&gt; Java&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spacy.io/&#34; target=&#34;_blank&#34;&gt;spaCy&lt;/a&gt; Python&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chewxy/lingo&#34; target=&#34;_blank&#34;&gt;lingo&lt;/a&gt; Golang&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;multilingual-text-toknization&#34;&gt;Multilingual text toknization&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unicode.org/reports/tr29/&#34; target=&#34;_blank&#34;&gt;Unicode Standard Annex #29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liuzl/segment&#34; target=&#34;_blank&#34;&gt;blevesearch segment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;text-normalization&#34;&gt;Text normalization&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/normalization&#34; target=&#34;_blank&#34;&gt;Text normalization in Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lemmatization&#34;&gt;Lemmatization&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;词干提取（stemming）和词形还原（lemmatization）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nlp.stanford.edu/IR-book/html/htmledition/stemming-and-lemmatization-1.html&#34; target=&#34;_blank&#34;&gt;Stemming and lemmatization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.lexiconista.com/datasets/lemmatization/&#34; target=&#34;_blank&#34;&gt;Lemmatization Lists&lt;/a&gt;&lt;em&gt;&lt;sub&gt;Datasets by MBM &lt;/sub&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unimorph.github.io/&#34; target=&#34;_blank&#34;&gt;The UniMorph Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中文繁简转换

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liuzl/gocc&#34; target=&#34;_blank&#34;&gt;gocc&lt;/a&gt; Golang version OpenCC&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/BYVoid/OpenCC&#34; target=&#34;_blank&#34;&gt;OpenCC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-cc/cc-jianfan&#34; target=&#34;_blank&#34;&gt;Chinese-Character Jian&amp;lt;=&amp;gt;Fan converting library in Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/siongui/gojianfan&#34; target=&#34;_blank&#34;&gt;Traditional and Simplified Chinese Conversion in Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Han_unification&#34; target=&#34;_blank&#34;&gt;Han unification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tagging&#34;&gt;Tagging&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Regex tagger

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mingrammer/commonregex&#34; target=&#34;_blank&#34;&gt;commonregex&lt;/a&gt;, a collection of common regular expressions for Go.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mvdan/xurls&#34; target=&#34;_blank&#34;&gt;xurls&lt;/a&gt;, a Go package of regex for urls.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>『大数据』方法论及示例</title>
      <link>/talk/bigdata-cufe/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0800</pubDate>
      
      <guid>/talk/bigdata-cufe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>人工智能的过去、现在和未来</title>
      <link>/talk/ai-sif100/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0800</pubDate>
      
      <guid>/talk/ai-sif100/</guid>
      <description></description>
    </item>
    
    <item>
      <title>大数据的“能”与“不能”</title>
      <link>/talk/bigdata-ether-n5/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0800</pubDate>
      
      <guid>/talk/bigdata-ether-n5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Goobot: A general multilingual web article extractor</title>
      <link>/project/goobot/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/goobot/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;实现新闻网页标题、时间、正文、图片和视频的抽取&lt;/li&gt;
&lt;li&gt;对全球多语种站点通用，高效稳定&lt;/li&gt;
&lt;li&gt;代码开源：&lt;a href=&#34;https://github.com/crawlerclub/ce&#34; target=&#34;_blank&#34;&gt;https://github.com/crawlerclub/ce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;演示地址：&lt;a href=&#34;http://goobot.org/&#34; target=&#34;_blank&#34;&gt;http://goobot.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Knowledge extraction from web pages</title>
      <link>/project/knowledge-extraction/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/knowledge-extraction/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;数据源

&lt;ul&gt;
&lt;li&gt;某搜索引擎网页库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commoncrawl.org/&#34; target=&#34;_blank&#34;&gt;Common Crawl Corpus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;根据号码在网页中出现的位置采用相应的方法

&lt;ul&gt;
&lt;li&gt;meta标签、microdata：结构化数据抽取&lt;/li&gt;
&lt;li&gt;网页头尾：基于规则的抽取系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网页正文&lt;/strong&gt;：

&lt;ul&gt;
&lt;li&gt;人工总结号码信息特征（HTML标签结构特征，文本特征等）&lt;/li&gt;
&lt;li&gt;机器学习进行信息抽取和分类&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Academic: the website designer for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0800</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Academic&lt;/strong&gt; is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Check out the latest demo&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes. Then head on over to the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start guide&lt;/a&gt; or take a look at the &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage various content including homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Extensible via &lt;strong&gt;color themes&lt;/strong&gt; and &lt;strong&gt;widgets/plugins&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Multilingual and easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic is available in different color themes and font themes.&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Ocean&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Dark&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Coffee theme with Playfair font&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;1950s&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one-click install using your web browser (recommended)&lt;/li&gt;
&lt;li&gt;install on your computer using Git with the Command Prompt/Terminal app&lt;/li&gt;
&lt;li&gt;install on your computer by downloading the ZIP files&lt;/li&gt;
&lt;li&gt;install on your computer with RStudio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quick-install-using-your-web-browser&#34;&gt;Quick install using your web browser&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34;&gt;Install Academic with Netlify&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Netlify will provide you with a customizable URL to access your new site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On GitHub, go to your newly created &lt;code&gt;academic-kickstart&lt;/code&gt; repository and edit &lt;code&gt;config.toml&lt;/code&gt; to personalize your site. Shortly after saving the file, your site will automatically update&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-git&#34;&gt;Install with Git&lt;/h3&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;Download and install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34;&gt;Fork&lt;/a&gt; the &lt;em&gt;Academic Kickstart&lt;/em&gt; repository and clone your fork with Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sourcethemes/academic-kickstart.git My_Website
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace &lt;code&gt;sourcethemes&lt;/code&gt; with your GitHub username.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize the theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd My_Website
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-zip&#34;&gt;Install with ZIP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract &lt;em&gt;Academic Kickstart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract the &lt;em&gt;Academic theme&lt;/em&gt; to the &lt;code&gt;themes/academic/&lt;/code&gt; folder from the above step&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-rstudio&#34;&gt;Install with RStudio&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;View the guide to installing Academic with RStudio&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you installed on your computer, view your new website by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt; or Netlify (refer to the first installation method). Alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as a university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of updates and check out the &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;release notes&lt;/a&gt; prior to updating your site.&lt;/p&gt;

&lt;p&gt;Before updating the framework, it is recommended to make a backup of your entire website directory (or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory) and record your current version number.&lt;/p&gt;

&lt;p&gt;By default, Academic is installed as a Git submodule which can be updated by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --remote --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Check out the update guide&lt;/a&gt; for full instructions and alternative methods.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For support, head over to the &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux process and thread</title>
      <link>/post/linux-process-and-thread/</link>
      <pubDate>Sat, 11 Jul 2015 00:00:00 +0800</pubDate>
      
      <guid>/post/linux-process-and-thread/</guid>
      <description>

&lt;p&gt;In Linux, &lt;code&gt;fork()&lt;/code&gt; is used to create new processes. These new processes are called as child processes and each child process initially shares all the segments like text, stack, heap etc until child tries to make any change to stack or heap. In case of any change, a seperate copy of stack and heap segments are prepared for child so that changes remain child specific. The text segment is read-only so both parent and child share the same text segment.&lt;/p&gt;

&lt;h2 id=&#34;linux-threads-vs-light-weight-processes&#34;&gt;Linux Threads vs Light Weight Processes&lt;/h2&gt;

&lt;p&gt;Threads in Linux are nothing but a flow of execution of the process. A process containing multiple execution flows is known as multi-thread process.&lt;/p&gt;

&lt;p&gt;For a non multi-threaded process there is only one execution flow that is the main execution flow and hence it is also known as single threaded process. For Linux kernel, there is no concept of thread. Each thread is viewed by the kernel as a seperate process but these processes are somewhat different from other normal processes.&lt;/p&gt;

&lt;p&gt;Threads are often mixed with the term Light Weight Processes or LWPs. The reason dates back to those times when Linux supported threads at user level only. This means that even a multi-threaded application was viewed by kernel as a single process only. this posed big challenges for the library that managed these user level threads because it had to take care of that a thread execution did not hinder if any other thread issued a blocking call.&lt;/p&gt;

&lt;p&gt;Later on the implementation changed and processes were attatched to each thread so that kernel can take care of them. But, as discussed earlier, Linux kernel does not see them as threads, each thread is viewed as a process inside kernel. These processes are known as light wight processes.&lt;/p&gt;

&lt;p&gt;The main difference between a light weight process(LWP) and a normal process is that LWPs share same address space and other resources like open files etc. As some resources are shared so these processes are considered to be light weight as compared to other normal processes and hence the name light weight processes.&lt;/p&gt;

&lt;p&gt;So, effectively we can say that threads and light weight processes are same. It&amp;rsquo;s just that thread is a term that is used at user level while light weight process is a term used at kernel level.&lt;/p&gt;

&lt;p&gt;From implementation point of view, threads are created using functions exposed by POSIX compliant pthread library in Linux. Internally, the &lt;code&gt;clone()&lt;/code&gt; function is used to create a normal as well as a light weight process. This means that to create a normal process &lt;code&gt;fork()&lt;/code&gt; is used that further calls &lt;code&gt;clone()&lt;/code&gt; with appropriate arguments while to create a thread or LWP, a function from pthread library calls &lt;code&gt;clone()&lt;/code&gt; with relvant flags. So, the main difference is generated by using different flags that can be passed to &lt;code&gt;clone()&lt;/code&gt; funciton(to be exact, it is a system call).&lt;/p&gt;

&lt;p&gt;Read more about &lt;code&gt;fork()&lt;/code&gt; and &lt;code&gt;clone()&lt;/code&gt; on their respective man pages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web Crawling at Scale</title>
      <link>/project/web-crawling/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>/project/web-crawling/</guid>
      <description>&lt;p&gt;Web crawling is at the core of many data businesses. Whether you call it web crawling, web or screen scraping, or mining the web, it involves going to sites or json apis on the web, grabbing pages, and parsing them to pull out links, images, text, prices, titles, email addresses, and numerous other page attributes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
